26. 动态返回 JSON 数据, 以生成导航菜单.
1). 创建一个类, 和现有的 JSON 数据相匹配. 
class Navigation{
	id;
	text;
	List<Navigation> children;
	
	...
}

2). 在 Action 的方法中返回基于 Navigation 的 JSON 数据
思路:
①. 在用户登陆的时候, 即把该用于的所有的 Role, Role 的所有 Authority, Authority 的 parentAuthority 和 mainResource
完成初始化
②. 得到所有的 Authority, 且 mainResouce 不为 null 的需要加入到导航菜单.
③. 需要获取父权限, 并构建父权限的 Navigation.

逻辑: 
	> 构建 Authority 对应的 Navigation
	> 获取 parentAuthority 对应的 Navigation
	> 若没有, 则创建新的, 保存起来. 以 parentAuthority 的 id 为 key, parentNavigation 为  val
	
***************具体步骤******************************
1)先观察 /EM06/WebContent/commons/tree_data1.json

[{
	"id":1,
	"text":"尚硅谷智能网络办公",
	"children":[{
		"id":11,
		"text":"学生管理",
		"state":"closed",
		"children":[{
			"id":111,
			"text":"学生资料查询"
		},{
			"id":112,
			"text":"学生资料录入"
		},{
			"id":113,
			"text":"学生请假单"
		},{
			"id":114,
			"text":"问题学生"
		},{
			"id":115,
			"text":"科目信息"
		},{
			"id":116,
			"text":"成绩查询"
		}]
	},{.................................
	

2)建立一个包com.atguigu.ems.util，包中添加类Navigation：

public class Navigation {
	
	private Integer id;
	private String text;
	
	private String title;
	private String url;
	
	private Collection<Navigation> children = new LinkedHashSet<>();

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getText() {
		return text;
	}

	public void setText(String text) {
		this.text = text;
	}

	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	public Collection<Navigation> getChildren() {
		return children;
	}

	public void setChildren(Collection<Navigation> children) {
		this.children = children;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Navigation other = (Navigation) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}
}


3)com.atguigu.ems.actions.EmployeeAction中添加：

    //导航菜单相关的属性
	private List<Navigation> navigations = null;
	
	public List<Navigation> getNavigations() {
		return navigations;
	}
	
	public String navigate(){
		String contextPath = ServletActionContext.getServletContext().getContextPath();
		navigations = new ArrayList<>();
		
		Navigation top = new Navigation();
		top.setId(Integer.MAX_VALUE);
		top.setText("尚硅谷智能网络办公");
		navigations.add(top);
		
		
		Navigation logout = new Navigation();
		logout.setId(Integer.MAX_VALUE - 1);
		logout.setText("登出");
		logout.setUrl(contextPath + "/security-logout");
		top.getChildren().add(logout);
		
		return "navigation-success";
	}
	
4)在 struts.xml 中配置

			<result type="json" name="navigation-success">
				<param name="root">navigations</param>
			</result>
			
网上的例子参照：navigations应该是返回的json对象

<result type="json">  
        <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->  
        <!-- 默认将会序列所有有返回值的getter方法的值，而无论该方法是否有对应属性 -->  
        <param name="root">dataMap</param>  
        <!-- 指定是否序列化空的属性 -->  
        <param name="excludeNullProperties">true</param>  
        <!-- 这里指定将序列化dataMap中的那些属性 -->  
        <param name="includeProperties">  
            userList.*  
        </param>  
        <!-- 这里指定将要从dataMap中排除那些属性，这些排除的属性将不被序列化，一半不与上边的参数配置同时出现 -->  
        <param name="excludeProperties">  
            SUCCESS  
        </param>  
</result>  

5) 备份好一个 /EM06/WebContent/commons/navigation.jsp，命名为navigation2.jsp
把navigation.jsp中的 

<ul id="tt" class="easyui-tree"
		       data-options="url:'${ctp }/commons/tree_data1.json',method:'get',animate:true"></ul>
		       
修改为：


<ul id="tt" class="easyui-tree"
		       data-options="url:'${ctp }/emp-navigate',method:'get',animate:true"></ul>
		       
		       
6)登录 AAAAAA  123456 进行测试，成功后可以看到 一个顶级菜单“尚硅谷智能网络办公”和一个子菜单 “登出"，至此路径已经打通

7)在3)基础上修改补充：com.atguigu.ems.actions.EmployeeAction.navigate();
备注在登录的时候已经在EmsUserDetailsService.java进行了初始化 Employee 的 roles, 以及 roles 的 authorities

        //导航菜单相关的属性
		private List<Navigation> navigations = null;
		
		public List<Navigation> getNavigations() {
			return navigations;
		}
		
		public String navigate(){
			String contextPath = ServletActionContext.getServletContext().getContextPath();
			navigations = new ArrayList<>();
			
			Navigation top = new Navigation();
			top.setId(Integer.MAX_VALUE);
			top.setText("尚硅谷智能网络办公");
			navigations.add(top);
			
			//根据当前用户的权限情况来构建动态的导航菜单.
			Employee employee = (Employee) session.get("employee");
			
			Map<Integer, Navigation> parentNavigatoins = new HashMap<>();
			//1. 获取用户的所有的 Role
			for(Role role: employee.getRoles()){
				//2. 再获取用户的所有的 Authority. 注意: mainResource 属性不为 null 的, 才需要作为导航菜单
				for(Authority authority: role.getAuthorities()){
					Resource resource = authority.getMainResource();
					if(resource == null){
						continue;
					}
					
					Navigation navigation = new Navigation();
					navigation.setId(authority.getId());
					navigation.setText(authority.getDisplayName());
					navigation.setUrl(contextPath + resource.getUrl());
					
					//3. 还需要获取权限的父权限, 来生成 Navigation. 再把具体的子权限作为父权限的 children
					Authority parentAuthority = authority.getParentAuthority();
					Navigation parentNavigation = parentNavigatoins.get(parentAuthority.getId());
					if(parentNavigation == null){
						parentNavigation = new Navigation();
						parentNavigation.setId(parentAuthority.getId());
						parentNavigation.setText(parentAuthority.getDisplayName());
						
						top.getChildren().add(parentNavigation);
						parentNavigatoins.put(parentAuthority.getId(), parentNavigation);
					}
					
					parentNavigation.getChildren().add(navigation);
				}
			}
			
			Navigation logout = new Navigation();
			logout.setId(Integer.MAX_VALUE - 1);
			logout.setText("登出");
			logout.setUrl(contextPath + "/security-logout");
			top.getChildren().add(logout);
			
			return "navigation-success";
		}

7)登录 AAAAAA  123456 进行测试
  登录 AABBCC 123456 进行测试  发现动态导航菜单已经生成了
  
8)当你登出的时候，是在自己里面登出，没有完全登出来。

看到 /EM06/WebContent/WEB-INF/pages/success.jsp中的 navigation.jsp

	<frameset rows="50,*,20" cols="*" frameborder="no" border="0" framespacing="0" id="frame1">
	    <frame name="banner" id="banner" scrolling="no" noresize="noresize" src="${ctp}/commons/topbar.jsp" frameborder="0">
	    <frameset rows="*"  cols="200,10,*" frameborder="no" border="0" framespacing="0" id="frame2">
	       <frame name="lef" id="left" scrolling="no" noresize="noresize" src="${ctp}/commons/navigation.jsp?a=12" frameborder="0">
	       <frame name="menu" id="menu" scrolling="no" noresize="noresize" src="${ctp}/commons/menu.jsp" frameborder="0">
	       <frame name="content" id="content" scrolling="no" frameborder="0" src="${ctp}/commons/content.jsp">
	    </frameset>
	    <frame name="status_bar" id="status_bar" scrolling="no" noresize="noresize" src="${ctp}/commons/status_bar.jsp" frameborder="0">
	</frameset>

需要对 /EM06/WebContent/commons/navigation.jsp进行修改：

下面函数修改：
        $(function(){
        	$('#tt').tree({
 	           onClick: function(node){
 	        	   if(node.url){
                	 window.parent.document.getElementById("content").src = node.url;
                  }
 	           }
             });
        	
        })
        
修改之后：

        $(function(){
        	$('#tt').tree({
 	           onClick: function(node){
 	        	   if(node.url){
 	        		   if(node.url !="${ctp}/security-logout"){
                	      window.parent.document.getElementById("content").src = node.url;
 	        		   }else{
 	        			  window.parent.parent.location.href = node.url; 
 	        		   }
                  }
 	           }
             });
        	
        })
        
9)至此，你登录成功后再进行登出，就可以完全登出来了！！！！